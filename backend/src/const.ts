export const HaproxySections: { [key: string]: string } = {
  global: 'global',
  defaults: 'defaults',
  listen: 'listen',
  frontend: 'frontend',
  backend: 'backend'
};

export const HaproxySectionsList: Array<string> = Object.values(HaproxySections);

export const HaproxyCustomSections: { [key: string]: string } = {
  global: 'global',
  defaults: 'defaults',
  listeners: 'listeners',
  frontends: 'frontends',
  backends: 'backends'
};

export const HaproxyCustomSectionsList: Array<string> = Object.values(HaproxyCustomSections);

export const HaproxyMapSectionToCustom: { [key: string]: string } = {
  [HaproxySections.global]: HaproxyCustomSections.global,
  [HaproxySections.defaults]: HaproxyCustomSections.defaults,
  [HaproxySections.listen]: HaproxyCustomSections.listeners,
  [HaproxySections.frontend]: HaproxyCustomSections.frontends,
  [HaproxySections.backend]: HaproxyCustomSections.backends
};

export const HaproxyOptions: { [key: string]: string } = {
  acl: 'acl',
  appsession: 'appsession',
  backlog: 'backlog',
  balance: 'balance',
  bind: 'bind',
  'bind-process': 'bind-process',
  block: 'block',
  capture: 'capture',
  debug: 'debug',
  daemon: 'daemon',
  quiet: 'quiet',
  clitimeout: 'clitimeout',
  contimeout: 'contimeout',
  cookie: 'cookie',
  chroot: 'chroot',
  'default-server': 'default-server',
  default_backend: 'default_backend',
  description: 'description',
  disabled: 'disabled',
  dispatch: 'dispatch',
  enabled: 'enabled',
  errorfile: 'errorfile',
  errorloc: 'errorloc',
  errorloc302: 'errorloc302',
  errorloc303: 'errorloc303',
  'force-persist': 'force-persist',
  fullconn: 'fullconn',
  grace: 'grace',
  'hash-type': 'hash-type',
  'http-check': 'http-check',
  'http-request': 'http-request',
  id: 'id',
  'ignore-persist': 'ignore-persist',
  log: 'log',
  'log-format': 'log-format',
  maxconn: 'maxconn',
  maxpipes: 'maxpipes',
  mode: 'mode',
  node: 'node',
  noepoll: 'noepoll',
  nokqueue: 'nokqueue',
  nopoll: 'nopoll',
  nosepoll: 'nosepoll',
  nosplice: 'nosplice',
  monitor: 'monitor',
  'monitor-net': 'monitor-net',
  'monitor-uri': 'monitor-uri',
  option: 'option',
  'option http-keep-alive': 'option http-keep-alive',
  'option abortonclose': 'option abortonclose',
  'option accept-invalid-http-request': 'option accept-invalid-http-request',
  'option accept-invalid-http-': 'option accept-invalid-http-',
  'option allbackups': 'option allbackups',
  'option checkcache': 'option checkcache',
  'option clitcpka': 'option clitcpka',
  'option contstats': 'option contstats',
  'option dontlog-normal': 'option dontlog-normal',
  'option dontlognull': 'option dontlognull',
  'option forceclose': 'option forceclose',
  'option forwardfor': 'option forwardfor',
  'option http-no-delay': 'option http-no-delay',
  'option http-pretend-keepalive': 'option http-pretend-keepalive',
  'option http-server-close': 'option http-server-close',
  'option http-use-proxy-header': 'option http-use-proxy-header',
  'option httpchk': 'option httpchk',
  'option httpclose': 'option httpclose',
  'option httplog': 'option httplog',
  'option http_proxy': 'option http_proxy',
  'option independant-streams': 'option independant-streams',
  'option ldap-check': 'option ldap-check',
  'option log-health-checks': 'option log-health-checks',
  'option log-separate-errors': 'option log-separate-errors',
  'option logasap': 'option logasap',
  'option mysql-check': 'option mysql-check',
  'option nolinger': 'option nolinger',
  'option originalto': 'option originalto',
  'option persist': 'option persist',
  'option redispatch': 'option redispatch',
  'option smtpchk': 'option smtpchk',
  'option socket-stats': 'option socket-stats',
  'option splice-auto': 'option splice-auto',
  'option splice-request': 'option splice-request',
  'option splice-response': 'option splice-response',
  'option srvtcpka': 'option srvtcpka',
  'option ssl-hello-chk': 'option ssl-hello-chk',
  'option tcp-smart-accept': 'option tcp-smart-accept',
  'option tcp-smart-connect': 'option tcp-smart-connect',
  'option tcpka': 'option tcpka',
  'option tcplog': 'option tcplog',
  'option transparent': 'option transparent',

  persist: 'persist',
  'rate-limit': 'rate-limit',
  redirect: 'redirect',
  redisp: 'redisp',
  redispatch: 'redispatch',
  reqadd: 'reqadd',
  reqallow: 'reqallow',
  reqdel: 'reqdel',
  reqdeny: 'reqdeny',
  reqiallow: 'reqiallow',
  reqidel: 'reqidel',
  reqideny: 'reqideny',
  reqipass: 'reqipass',
  reqirep: 'reqirep',
  reqisetbe: 'reqisetbe',
  reqitarpit: 'reqitarpit',
  reqpass: 'reqpass',
  reqrep: 'reqrep',
  reqsetbe: 'reqsetbe',
  reqtarpit: 'reqtarpit',
  retries: 'retries',
  rspadd: 'rspadd',
  rspdel: 'rspdel',
  rspdeny: 'rspdeny',
  rspidel: 'rspidel',
  rspideny: 'rspideny',
  rspirep: 'rspirep',
  rsprep: 'rsprep',
  server: 'server',
  source: 'source',
  srvtimeout: 'srvtimeout',

  stats: 'stats',
  'stats admin': 'stats admin',
  'stats auth': 'stats auth',
  'stats enable': 'stats enable',
  'stats hide-version': 'stats hide-version',
  'stats http-request': 'stats http-request',
  'stats realm': 'stats realm',
  'stats refresh': 'stats refresh',
  'stats scope': 'stats scope',
  'stats show-desc': 'stats show-desc',
  'stats show-legends': 'stats show-legends',
  'stats show-node': 'stats show-node',
  'stats uri': 'stats uri',

  stick: 'stick',
  'stick-table': 'stick-table',
  'tcp-request': 'tcp-request',
  timeout: 'timeout',
  transparent: 'transparent',
  use_backend: 'use_backend',
  group: 'group',
  pidfile: 'pidfile',
  uid: 'uid',
  gid: 'gid'
};


export const HaproxyOptionsList: Array<string> = Object.values(HaproxyOptions);
